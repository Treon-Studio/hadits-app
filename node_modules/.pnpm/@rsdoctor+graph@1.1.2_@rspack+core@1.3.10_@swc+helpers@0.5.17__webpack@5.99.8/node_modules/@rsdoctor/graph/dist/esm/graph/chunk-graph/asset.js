import { SDK } from "@rsdoctor/types";
import { gzipSync } from "node:zlib";
let id = 1;
class Asset {
  static init() {
    id = 1;
  }
  constructor(path, size, chunks, content) {
    this.id = id++;
    this.path = path;
    this.size = size;
    this.chunks = chunks;
    this.content = content;
  }
  toData(types) {
    return {
      id: this.id,
      path: this.path,
      size: this.size,
      gzipSize: this.gzipSize,
      chunks: this.chunks?.map((ck) => ck.id),
      content: types === SDK.ToDataType.NoSourceAndAssets || types === SDK.ToDataType.NoCode ? "" : this.content
    };
  }
  /* native asset */
  setChunks(chunks) {
    this.chunks = chunks;
  }
  setId(id2) {
    this.id = id2;
  }
  setGzipSize(content) {
    this.gzipSize = gzipSync(content, { level: 9 }).length;
  }
}
export {
  Asset
};
