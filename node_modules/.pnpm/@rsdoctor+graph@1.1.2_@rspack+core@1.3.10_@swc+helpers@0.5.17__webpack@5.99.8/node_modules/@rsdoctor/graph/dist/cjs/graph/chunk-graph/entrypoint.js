"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var entrypoint_exports = {};
__export(entrypoint_exports, {
  EntryPoint: () => EntryPoint
});
module.exports = __toCommonJS(entrypoint_exports);
let id = 1;
class EntryPoint {
  constructor(name) {
    this.name = name;
    this._chunks = [];
    this._assets = [];
    this.id = id++;
  }
  static init() {
    id = 1;
  }
  addChunk(chunk) {
    if (this._chunks.includes(chunk))
      return;
    this._chunks.push(chunk);
  }
  addAsset(asset) {
    if (this._assets.includes(asset))
      return;
    this._assets.push(asset);
  }
  toData() {
    return {
      id: this.id,
      name: this.name,
      chunks: this._chunks.map((e) => e.id),
      assets: this._assets.map((e) => e.path),
      size: this._assets.length ? this._assets.reduce((t, e) => t + e.size, 0) : 0
    };
  }
  setChunks(chunks) {
    this._chunks = chunks;
  }
  setAssets(assets) {
    this._assets = assets;
  }
  setId(id2) {
    this.id = id2;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  EntryPoint
});
