import fs from "fs";
import path from "path";
import os from "os";
function writeMcpPort(port, builderName) {
  const homeDir = os.homedir();
  const rsdoctorDir = path.join(homeDir, ".cache/rsdoctor");
  const mcpPortFilePath = path.join(rsdoctorDir, "mcp.json");
  if (!fs.existsSync(rsdoctorDir)) {
    fs.mkdirSync(rsdoctorDir, { recursive: true });
  }
  let mcpJson = {
    portList: {},
    port: 0
  };
  if (fs.existsSync(mcpPortFilePath)) {
    mcpJson = JSON.parse(fs.readFileSync(mcpPortFilePath, "utf8"));
  }
  if (!mcpJson.portList)
    mcpJson.portList = {};
  mcpJson.portList[builderName || "builder"] = port;
  mcpJson.port = port;
  fs.writeFileSync(mcpPortFilePath, JSON.stringify(mcpJson, null, 2), "utf8");
}
function getMcpConfigPath() {
  const homeDir = os.homedir();
  const rsdoctorDir = path.join(homeDir, ".cache/rsdoctor");
  const mcpPortFilePath = path.join(rsdoctorDir, "mcp.json");
  return mcpPortFilePath;
}
export {
  getMcpConfigPath,
  writeMcpPort
};
