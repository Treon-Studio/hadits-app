import { elementToRuntimeInfoMap, } from '../MainThreadRuntime.js';
export function createCrossThreadEvent(runtime, domEvent, eventName) {
    const targetElement = domEvent.target;
    const currentTargetElement = domEvent
        .currentTarget;
    const type = domEvent.type;
    const params = {};
    if (type.match(/^transition/)) {
        Object.assign(params, {
            'animation_type': 'keyframe-animation',
            'animation_name': domEvent.propertyName,
            new_animator: true, // we support the new_animator only
        });
    }
    else if (type.match(/animation/)) {
        Object.assign(params, {
            'animation_type': 'keyframe-animation',
            'animation_name': domEvent.animationName,
            new_animator: true, // we support the new_animator only
        });
    }
    const targetElementRuntimeInfo = runtime[elementToRuntimeInfoMap].get(targetElement);
    const currentTargetElementRuntimeInfo = runtime[elementToRuntimeInfoMap].get(currentTargetElement);
    return {
        type: eventName,
        timestamp: domEvent.timeStamp,
        target: {
            id: targetElement.id,
            dataset: targetElementRuntimeInfo.lynxDataset,
            uniqueId: targetElementRuntimeInfo.uniqueId,
        },
        currentTarget: currentTargetElementRuntimeInfo
            ? {
                id: currentTargetElement.id,
                dataset: currentTargetElementRuntimeInfo.lynxDataset,
                uniqueId: currentTargetElementRuntimeInfo.uniqueId,
            }
            : null,
        // @ts-expect-error
        detail: domEvent.detail ?? {},
        params,
    };
}
//# sourceMappingURL=createCrossThreadEvent.js.map