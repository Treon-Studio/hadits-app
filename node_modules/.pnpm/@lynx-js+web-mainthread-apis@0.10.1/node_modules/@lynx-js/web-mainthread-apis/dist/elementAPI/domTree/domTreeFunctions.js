// Copyright 2023 The Lynx Authors. All rights reserved.
// Licensed under the Apache License Version 2.0 that can be found in the
// LICENSE file in the root directory of this source tree.
export function __AppendElement(parent, child) {
    parent.append(child);
}
export function __ElementIsEqual(left, right) {
    return left === right;
}
export function __FirstElement(element) {
    return element.firstElementChild || undefined;
}
export function __GetChildren(element) {
    return element.children;
}
export function __GetParent(element) {
    return element.parentElement || undefined;
}
export function __InsertElementBefore(parent, child, ref) {
    return parent.insertBefore(child, ref);
}
export function __LastElement(element) {
    return element.lastElementChild || undefined;
}
export function __NextElement(element) {
    return element.nextElementSibling || undefined;
}
export function __RemoveElement(parent, child) {
    parent.removeChild(child);
    return child;
}
export function __ReplaceElement(newElement, oldElement) {
    oldElement.replaceWith(newElement);
}
export function __ReplaceElements(parent, newChildren, oldChildren) {
    newChildren = Array.isArray(newChildren) ? newChildren : [newChildren];
    if (!oldChildren || (Array.isArray(oldChildren) && oldChildren?.length === 0)) {
        parent.append(...newChildren);
    }
    else {
        oldChildren = Array.isArray(oldChildren) ? oldChildren : [oldChildren];
        for (let ii = 1; ii < oldChildren.length; ii++) {
            __RemoveElement(parent, oldChildren[ii]);
        }
        const firstOldChildren = oldChildren[0];
        firstOldChildren.replaceWith(...newChildren);
    }
}
//# sourceMappingURL=domTreeFunctions.js.map