export declare const OperationType: {
    readonly CreateElement: 1;
    readonly SetAttribute: 2;
    readonly RemoveAttribute: 3;
    readonly Append: 4;
    readonly Remove: 5;
    readonly ReplaceWith: 6;
    readonly InsertBefore: 7;
    readonly EnableEvent: 8;
    readonly RemoveChild: 9;
    readonly StyleDeclarationSetProperty: 10;
    readonly StyleDeclarationRemoveProperty: 11;
    readonly SetInnerHTML: 12;
};
type IOperationType = typeof OperationType;
interface ElementOperationBase {
    type: IOperationType[keyof IOperationType];
    /**
     * uniqueId
     */
    uid: number;
}
export interface CreateOperation extends ElementOperationBase {
    type: IOperationType['CreateElement'];
    tag: string;
}
export interface SetAttributeOperation extends ElementOperationBase {
    type: IOperationType['SetAttribute'];
    key: string;
    value: string;
}
export interface RemoveAttributeOperation extends ElementOperationBase {
    type: IOperationType['RemoveAttribute'];
    key: string;
}
export interface AppendOperation extends ElementOperationBase {
    type: IOperationType['Append'];
    /**
     * child uniqueId
     */
    cid: number[];
}
export interface RemoveOperation extends ElementOperationBase {
    type: IOperationType['Remove'];
}
export interface InsertBeforeOperation extends ElementOperationBase {
    type: IOperationType['InsertBefore'];
    /**
     * child uniqueId
     */
    cid: number;
    ref?: number | undefined;
}
export interface ReplaceOperation extends ElementOperationBase {
    type: IOperationType['ReplaceWith'];
    /**
     * the new element's unique id.
     */
    nid: number[];
}
export interface EnableEventOperation extends ElementOperationBase {
    type: IOperationType['EnableEvent'];
    eventType: string;
}
export interface RemoveChildOperation extends ElementOperationBase {
    type: IOperationType['RemoveChild'];
    /**
     * the child element's unique id to be removed.
     */
    cid: number;
}
export interface StyleDeclarationSetPropertyOperation extends ElementOperationBase {
    type: IOperationType['StyleDeclarationSetProperty'];
    property: string;
    value: string;
    priority: string | undefined | '';
}
export interface StyleDeclarationRemovePropertyOperation extends ElementOperationBase {
    type: IOperationType['StyleDeclarationRemoveProperty'];
    property: string;
}
export interface SetInnerHTMLOperation extends ElementOperationBase {
    type: IOperationType['SetInnerHTML'];
    text: string;
}
export type ElementOperation = EnableEventOperation | ReplaceOperation | InsertBeforeOperation | CreateOperation | SetAttributeOperation | RemoveAttributeOperation | AppendOperation | RemoveOperation | RemoveChildOperation | StyleDeclarationSetPropertyOperation | StyleDeclarationRemovePropertyOperation | SetInnerHTMLOperation;
export {};
